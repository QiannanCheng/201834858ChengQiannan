from crypt comment math.ncsu.edu subject cryptographi faq mathemat cryptolog archiv name cryptographi faq part last modifi faq sci.crypt part mathemat cryptolog fourth ten part sci.crypt faq part mostli independ you should read first part befor rest we don't have time send out miss part mail so don't ask note kah refer refer list last part section faq avail via anonym ftp rtfm.mit.edu pub usenet news.answ cryptographi faq part xx cryptographi faq post newsgroup sci.crypt sci.answ news.answ everi dai content mathemat term what privat kei cryptosystem what attack what' advantag formul all mathemat why on time pad secur what' ciphertext onli attack what' known plaintext attack what' chosen plaintext attack mathemat term what can you sai about brute forc attack what' kei guess attack what' entropi mathemat term what privat kei cryptosystem privat kei cryptosystem consist encrypt system e decrypt system d encrypt system e collect function e_k index kei k map some set plaintext p some set ciphertext c similarli decrypt system d collect function d_k d_k e_k p p everi plaintext p succes decrypt ciphertext plaintext accomplish us same kei index us correspond encrypt plaintext ciphertext system wherein same kei valu us encrypt decrypt also known symmetr cryptoystem what attack intuit term passiv attack cryptosystem ani method start some inform about plaintext correspond ciphertext under some unknown kei figur out more inform about plaintext it' possibl state mathemat what mean here we go fix function f g h n variabl fix encrypt system e fix distribut plaintext kei attack e us g assum f give h probabl p algorithm pair f g input on output h probabl p comput h h p_ p_n we have f f p_ p_n g g e_k p_ e_k p_n note probabl depend distribut vector k p_ p_n attack trivial pointless probabl least p comput h h p_ p_n f f p_ p_n g g c_ c_n here c_ c_n rang uniformli over possibl ciphertext have particular relat p_ p_n other word attack trivial doesn't actual us encrypt e_k p_ e_k p_n attack call on ciphertext n two ciphertext n so what' advantag formul all mathemat basic cryptolog you can never prove cryptosystem secur read part we keep sai strong cryptosystem must have properti have properti guarante cryptosystem strong contrast purpos mathemat cryptolog precis formul possibl prove statement cryptosystem strong we sai exampl cryptosystem secur against all passiv attack ani nontrivi attack against system defin abov too slow practic we can prove statement we have confid our cryptosystem resist ani passiv cryptanalyt techniqu we can reduc statement some well known unsolv problem we still have confid cryptosystem isn't easi break other part cryptolog also amen mathemat definit again point explicitli identifi what assumpt we'r make prove produc desir result we can figur out what mean particular cryptosystem us properli just mean assumpt valid same methodolog us cryptanalysi too cryptanalyst can take advantag incorrect assumpt often he can try construct proof secur system see where proof fail us failur start point hi analysi why on time pad secur definit on time pad cryptosystem where plaintext ciphertext kei all string sai byte string some length m e_k p just sum let' sai exclus k p easi prove mathemat _no_ nontrivi singl ciphertext attack on time pad assum uniform distribut kei note we don't have assum uniform distribut plaintext here' proof let attack i. algorithm take two input f g produc on output h some probabl p h h p whenev f f p g g e_k p i. g g k p becaus distribut k uniform independ p distribut k p must also uniform independ p also distribut c uniform independ p henc probabl exactli p h h p whenev f f p g g c over all p c thu fortiori trivial other hand on time pad _not_ secur kei k us more than on plaintext i. nontrivi multipl ciphertext attack so properli us kei k must thrown awai after on encrypt kei also call pad explain name on time pad what' ciphertext onli attack notat abov ciphertext onli attack on where f constant given onli some inform g e_k p_ e_k p_n about n ciphertext attack ha have some chanc produc some inform h p_ p_n about plaintext attack trivial ha just good chanc produc h p_ p_n when given g c_ c_n random c_ c_n exampl sai g c c sai h p first bit p we can easili write down attack guess attack which simpli guess h p attack trivial becaus doesn't us ciphertext ha fifti fifti chanc guess correctli matter what other hand attack rsa which produc on bit inform about p success us c fed random c success rate drop so nontrivi attack what' known plaintext attack classic known plaintext attack ha f p_ p_ p_ g c_ c_ c_ c_ h p_ p_ depend onli p_ other word given two ciphertext c_ c_ on decrypt p_ known plaintext attack should produc inform about other decrypt p_ note known plaintext attack often defin literatur produc inform about kei pointless cryptanalyst gener care about kei onli insofar let him decrypt further messag what' chosen plaintext attack chosen plaintext attack first increasingli impract seri _active_ attack cryptosystem attack where cryptanalyst feed data encryptor attack don't fit our model passiv attack explain abov anywai chosen plaintext attack let cryptanalyst choos plaintext look correspond ciphertext repeat until he ha figur out how decrypt ani messag more absurd exampl sort attack chosen kei attack chosen system attack much more import form activ attack messag corrupt attack where attack tri chang ciphertext wai make us chang plaintext mani easi wai throw kink all attack instanc automat encrypt ani plaintext p t e_k h t r p r p where t time kei sequenc number chosen anew each messag r random number h on wai hash function here comma mean concaten plu mean exclus mathemat term what can you sai about brute forc attack consid follow known plaintext attack we given some plaintext p_ p_ n ciphertext c_ c_ n we'r also given ciphertext c_n we run through everi kei k when we find k e_k p_i c_i everi i n we print d_k c_n n big enough onli on kei work attack succe valid input all time while produc correct result onli onc blue moon random input thu nontrivi attack it onli problem veri slow mani possibl kei what' kei guess attack what' entropi sai somebodi us on time pad isn't choos kei randomli uniformli from all m bit messag he suppos our secur proof fact sai he' known prefer kei which english word cryptanalyst can run through all english word possibl kei attack often succe it' much faster than brute forc search entir keyspac we can measur how bad kei distribut calcul it entropi number e number real bit inform kei cryptanalyst typic happen across kei within e guess e defin sum p_k log_ p_k where p_k probabl kei k 