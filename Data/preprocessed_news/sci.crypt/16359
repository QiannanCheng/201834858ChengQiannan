from ggr koonda.acci.com.au greg rose subject authent on time pad re advanc on time pad articl s dbminnehb elang acslab.umbc.edu olson umbc.edu bryan olson cmsc g write on time pad yeild ideal secur ha well known flaw authent suppos you us random bit stream pad exclus encrypt oper adversari know plaintext messag he can chang ani other messag here' how work alic send bob plaintext p under kei stream s alic comput ciphertext c s xor p send bob ev know plainext p want messag appear p ev intercept c comput c c xor p xor p s xor p ev send c bob bob decrypt c comput c'xor s p thu receiv fals messag which substitut ev firstli asid i agre weak exist i have lot troubl believ repres difficulti real life given purpos on time pad give unbreak secur expens kei distribut etc impli client realli do want level secur same peopl want keep p secret i find hard believ ev might happen have copi p ly around i am awar same argument appli ev know even small part messag ev must know exactli where which byte c her known susequ start result garbl i find least surpris back question i had resourc us on time pad transmiss i would also append messag authent code messag us up next bit on time pad kei perhap your origin question basic ask whether ani wai authent messag same degre secur pad itself provid i don't know answer howev i would propos follow discuss alic bob have arbitrari number secret random bit share which ev doesn't know she find them out effect know some p correspond c fact correspond caus problem messag authent code creat us some on time pad oper ev could know which part mac were affect which part input she would unabl forg mac correspond what requir non linear combin part messag non linear so simpli xore subtract whatev doesn't have exactli same effect now end encrypt messag c alic append n bit mac comput follow s mean next full chunk on time pad comput c p xor s pad n bit boundari more s break c n bit chunk set mac initialis vector i each chunk sequenti set mac mac nlop c i end process mac messag authent code bob verifi mac obviou manner he recov plaintext p us some more hi pad reproduc mac same manner nlop non linear oper rub simplest non linear oper i can think s box have fix even publish permut n bit integ index tabl call sbox us x nlop y x xor sbox y practic speak i think solv your problem ev never see intermedi output c henc can't deduc s perform ani valid substitut also practic speak you want mac fairli larg sai bit you might want gigabyt sai s box so you might work byte size s box i think irrelev detail discuss hand who first point out my error give me pointer some literatur greg rose australian comput commun institut ggr acci.com.au us standard phrase hijack mai inadvis caa 